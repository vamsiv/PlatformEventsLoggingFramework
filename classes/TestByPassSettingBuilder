/**
* @group TestBuilder
* @description A test Bypass Setting builder that improve test method
* readability and reduce duplicate setup logic
* @author Vamsi Velampati (vvelampati@deloitte.com)
* @date 05/25/2020
* @version 1.0
*/
@isTest public class TestBypassSettingBuilder {
    
    private Boolean isPlatformEventTriggerBypassed = false;
    private Id setupOwnerId;
    
    
    /**
* @description Method to set isPlatformEventTriggerBypassed.
* @param isPlatformEventTriggerBypassed
* @return TestBypassSettingBuilder
*/
    public TestBypassSettingBuilder setIsPlatformEventTriggerBypassed(Boolean isPlatformEventTriggerBypassed) {
        this.isPlatformEventTriggerBypassed = isPlatformEventTriggerBypassed;
        return this;
    }
    /**
* @description Method to create Bypass Custom Setting object using fields.
* @return Bypass_Settings__c
*/
    public Bypass_Settings__c build() {
        Bypass_Settings__c bypassCS = Bypass_Settings__c.getInstance();
        if (bypassCS == null) {
            bypassCS = new Bypass_Settings__c();
        }
        byPassCS.Is_Platform_Event_Log_Bypassed__c = Is_Platform_Event_Log_Bypassed__c;
        
        return bypassCS;
    }
    
    /**
* @description Method to set setupOwnerId.
* @param setupOwnerId
* @return TestBypassSettingBuilder
*/
    public TestBypassSettingBuilder setSetupOwnerId(Id setupOwnerId) {
        this.setupOwnerId = setupOwnerId;
        return this;
    }
    
    /**
* @description Method to create Bypass Custom Setting record fetched from
* build method.
* @return Bypass_Settings__c
*/
    public Bypass_Settings__c buildAndSave() {
        Bypass_Settings__c bypassCS = build();
        upsert bypassCS;
        return bypassCS;
    }
}